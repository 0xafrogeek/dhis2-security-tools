command:
  check_backup_encryption:
    title: DHIS2 SA-ID DB-07 | Ensure Backups are Encrypted at rest
    exec: |
      backup_scripts=$(crontab -l | awk '{print $NF}')

      for script in $backup_scripts; do
        script_path=$(which $script)

        # Check if the script exists and examine its contents
        if [ -f "$script_path" ]; then
          backup_path=$(grep -Eo "backup_path\s*=\s*['\"]?([^'\"]+)" "$script_path" | awk -F= '{print $2}' | tr -d " '\"")
          remote_storage=$(grep -Eo "remote_storage\s*=\s*['\"]?([^'\"]+)" "$script_path" | awk -F= '{print $2}' | tr -d " '\"")

          # Check if the backup path is local and if it is encrypted
          if [ -n "$backup_path" ]; then
            if [ -f "$backup_path" ] && [[ $(stat -c "%a" "$backup_path") =~ ^(640|660)$ ]]; then
              echo "Local backup file path: $backup_path"

              if grep -q "openssl.*cipher" "$script_path"; then
                echo "Backups are being encrypted"
              else
                echo "Backups are not being encrypted"
              fi
            else
              echo "Invalid or inaccessible local backup file path: $backup_path"
            fi
          fi

          # Check if the backup path is remote and if encrypted
          if [ -n "$remote_storage" ]; then
            echo "Remote backup storage: $remote_storage"

            # Check if encryption is enabled
            if grep -q "openssl.*cipher" "$script_path"; then
              echo "Backups are being encrypted"
            else
              echo "Backups are not being encrypted"
            fi
          fi
        fi
      done
    exit-status: 0
    stdout:
      - "/Local backup file path: .*/"
      - "/Remote backup storage: .*/"
      - "Encryption logic is included"
    meta:
      failed: "Backup cron script paths or encryption logic not found"
